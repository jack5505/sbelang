/*
 * generated by Xtext 2.13.0
 */
package org.sbelang.dsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.sbelang.dsl.sbeLangDsl.MessageSchema
import java.io.File
import java.nio.file.Paths
import java.nio.file.Files
import org.eclipse.xtext.testing.validation.ValidationTestHelper

@RunWith(XtextRunner)
@InjectWith(SbeLangDslInjectorProvider)
class SbeLangDslParsingTest {
    @Inject
    ParseHelper<MessageSchema> parseHelper

    @Inject extension ValidationTestHelper

    @Test
    def void testPrimitives() {
        val result = parseHelper.parse('''
            schema org.sbelang.examples.v2.ExampleSchema 
                id = 1 version = 100
            //  headerType = a.b.c.D
            //  bigEndian
            
            types {
                simpleType t_Uint8 : uint8
                simpleType t_Uint16 : uint16
                simpleType t_Uint32 : uint32
                simpleType t_Uint64 : uint64
            }
            
            message TestPrimitivesMessage id = 1 {
                f8 : t_Uint8 @ 1001
                f16 : t_Uint16 @ 1002
                f32 : t_Uint32 @ 1003
                f64 : t_Uint64 @ 1004
            }
        ''')
        Assert.assertNotNull(result)
        result.assertNoErrors

        val errors = result.eResource.errors
        Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
    }

    @Test
    def void testAllFeatures() {
        val String allFeaturesFileContent = new String(
            Files.readAllBytes(Paths.get(new File("resources/AllFeatures.sbelang").getAbsolutePath())));

        val result = parseHelper.parse(allFeaturesFileContent)
        Assert.assertNotNull(result)
        result.assertNoErrors

        val errors = result.eResource.errors
        Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
    }
}
