/*
 * generated by Xtext 2.13.0
 */
package org.sbelang.dsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.sbelang.dsl.sbeLangDsl.MessageSchema

@RunWith(XtextRunner)
@InjectWith(SbeLangDslInjectorProvider)
class SbeLangDslParsingTest {
    @Inject
    ParseHelper<MessageSchema> parseHelper

    @Test
    def void testPrimitives() {
        val result = parseHelper.parse('''
            package PrimitivesTest @ 1 / 0
            types {
                typeUint8 : uint8
                typeUint16 : uint16
                typeUint32 : uint32
            }
            
            message TestMessage @ 1 {
                fieldOfTypeUint8 : typeUint8 @ 1001
                fieldOfTypeUint16 : typeUint16 @ 1002
                fieldOfTypeUint32 : typeUint32 @ 1003
            }
        ''')
        Assert.assertNotNull(result)

        val errors = result.eResource.errors
        Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
    }
}
