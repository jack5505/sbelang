/*
 * generated by Xtext 2.13.0
 */
package org.sbelang.dsl.tests

import com.google.inject.Injector
import org.eclipse.emf.common.util.URI
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.resource.XtextResourceSet
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.junit.Test
import org.junit.runner.RunWith
import org.sbelang.dsl.SbeLangDslStandaloneSetup
import org.sbelang.dsl.generator.intermediate.Parser
import org.sbelang.dsl.sbeLangDsl.MessageSchema
import org.sbelang.dsl.generator.intermediate.ParsedSchema

@RunWith(XtextRunner)
@InjectWith(SbeLangDslInjectorProvider)
class SbeLangDslIntermediateParserTest {
    @Test
    def void testIntermediateParser() {
        val Injector injector = new SbeLangDslStandaloneSetup().createInjectorAndDoEMFRegistration()
        val XtextResourceSet resourceSet = injector.getInstance(XtextResourceSet);
        val Resource resource = resourceSet.getResource(URI.createURI("resources/Incremental.sbelang"), true);

        val messageSchema = resource.getEObject("/") as MessageSchema

        val ParsedSchema parsedSchema = Parser.parse(messageSchema);
    }

}
