/*
 * generated by Xtext 2.13.0
 */
package org.sbelang.dsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.sbelang.dsl.sbeLangDsl.MessageSchema
import org.sbelang.dsl.generator.intermediate.ImMessageSchema
import org.sbelang.dsl.generator.intermediate.Parser
import org.sbelang.dsl.generator.intermediate.ParsedSchema

/**
 * Base class for SBE generators
 */
abstract class SbeLangDslBaseGenerator extends AbstractGenerator {

    override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
        val messageSchema = resource.getEObject("/") as MessageSchema

        val parsedSchema = Parser.parse(messageSchema)
        compile(parsedSchema, fsa, context)

        if (Boolean.valueOf(System.getProperty('useLegacyCompiler'))) {
            val ImMessageSchema imSchema = new ImMessageSchema(messageSchema)
            compile(imSchema, fsa, context)
        }
    }

    def void compile(ImMessageSchema schema, IFileSystemAccess2 fsa, IGeneratorContext context)

    def void compile(ParsedSchema schema, IFileSystemAccess2 fsa, IGeneratorContext context)
}
